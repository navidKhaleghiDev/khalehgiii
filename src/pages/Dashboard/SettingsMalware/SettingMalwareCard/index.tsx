import { Card, Typography } from '@ui/atoms';
import { IFileType } from '@src/services/config/types';
import { StringifyProperties } from '@src/types/global';

import { dateAndNumber } from '@src/helper/utils/dateUtils';
import { BaseSwitch } from '@ui/atoms/Inputs/BaseSwitch';

type FileTypeCardProps = {
  fileType: StringifyProperties<IFileType> | IFileType;
  isHeader?: boolean;
  onClickActions?: (action: string, keys: any) => void;
};

export function SettingMalwareCard({
  fileType,
  isHeader,
  onClickActions,
}: FileTypeCardProps) {
  const overflowUiStyle = {
    typo: !isHeader
      ? 'group-hover:text-gray-800 group-hover:overflow-visible rounded-md group-hover:whitespace-normal group-hover:border group-hover-border-gray-300 p-2 group-hover:bg-white group-hover:shadow-lg  transition duration-300 z-auto '
      : '',
    div: 'group text-center break-words whitespace-nowrap overflow-hidden overflow-ellipsis px-6  ',
  };

  return (
    <div className="flex gap-6">
      <Card
        color="neutral"
        className="flex h-10 items-center px-2 my-2 w-full text-neutral-600"
      >
        <div className={`w-6/12 ${overflowUiStyle.div}`} dir="ltr">
          <Typography
            size="body3"
            type="div"
            className={` ${overflowUiStyle.typo} uppercase `}
          >
            {fileType.license_id}
          </Typography>
        </div>
        <Typography
          size="body3"
          type="div"
          className="px-3 w-3/12 text-center break-words uppercase"
        >
          {!isHeader
            ? dateAndNumber(fileType.license_creation)
            : fileType.license_creation}
        </Typography>
        <Typography
          size="body3"
          type="div"
          className="px-3 w-3/12 text-center break-words uppercase"
        >
          {!isHeader
            ? dateAndNumber(fileType.license_expiration_date)
            : fileType.license_expiration_date}
        </Typography>
      </Card>
      <Card
        color="neutral"
        className="flex h-10 items-center px-2 my-2 w-full text-neutral-600"
      >
        <Typography
          size="body3"
          type="div"
          className="px-3 w-3/12 text-center break-words uppercase"
        >
          {!isHeader ? dateAndNumber(fileType.created_at) : fileType.created_at}
        </Typography>
        <Typography
          size="body3"
          type="div"
          className="px-3 w-3/12 text-center break-words uppercase"
        >
          {!isHeader ? dateAndNumber(fileType.updated_at) : fileType.updated_at}
        </Typography>
        <Typography
          size="body3"
          type="div"
          className="px-3 w-2/12 flex justify-center items-center uppercase"
        >
          {isHeader ? (
            fileType.sandbox_is_active
          ) : (
            <BaseSwitch
              pureValue={fileType.sandbox_is_active}
              pureOnChange={() =>
                onClickActions('edit', {
                  sandbox_is_active: !fileType.sandbox_is_active,
                })
              }
              // name="sandbox_is_active"
            />
          )}
        </Typography>
        <Typography
          size="body3"
          type="div"
          className="px-3 w-2/12 flex justify-center items-center uppercase"
        >
          {isHeader ? (
            fileType.clamav_is_active
          ) : (
            <BaseSwitch
              pureValue={fileType.clamav_is_active}
              // name="clamav_is_active"
            />
          )}
        </Typography>
        <Typography
          size="body3"
          type="div"
          className="px-3 w-2/12 flex justify-center items-center uppercase"
        >
          {isHeader ? (
            fileType.yara_is_active
          ) : (
            <BaseSwitch
              pureValue={fileType.yara_is_active}
              pureOnChange={() =>
                onClickActions('edit', {
                  yara_is_active: !fileType.yara_is_active,
                })
              }
              // name="yara_is_active"
            />
          )}
        </Typography>
      </Card>
    </div>
  );
}
